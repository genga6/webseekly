name: WebSeekly Nodes Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths: [
      'src/langgraph/nodes/**', 
      'test/**',
      '.github/workflows/pytest.yml'
      ]

defaults:
  run:
    shell: bash

jobs:
  test-intent-node:
    name: Test of IntentNode
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=${{ env.PYTHONPATH }}"

      - name: Run pytest for IntentNode
        env: 
          OPEN_API_KEY: ${{ secrets.OPEN_API_KEY }}
        run: uv run pytest -s test/test_intent_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-search-node:
    name: Test of SearchNode
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=${{ env.PYTHONPATH }}"

      - name: Run pytest for SearchNode
        env: 
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          CUSTOM_SEARCH_ENGINE_ID: ${{ secrets.CUSTOM_SEARCH_ENGINE_ID }}
        run: uv run pytest -s test/test_search_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-crawl-node:
    name: Test of CrawlNode
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=${{ env.PYTHONPATH }}"

      - name: Run pytest
        run: uv run pytest -s test/test_crawl_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-scrape-node:
    name: Test of ScrapeNode
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=${{ env.PYTHONPATH }}"

      - name: Run pytest for ScrapeNode
        env: 
          OPEN_API_KEY: ${{ secrets.OPEN_API_KEY }}
        run: uv run pytest -s test/test_scrape_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-verification-node:
    name: Test of VerificationNode
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=${{ env.PYTHONPATH }}"

      - name: Run pytest for VerificationNode
        run: uv run pytest -s test/test_verification_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-save-node:
    name: Test of SaveNode
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=${{ env.PYTHONPATH }}"

      - name: Run pytest
        run: uv run pytest -s test/test_save_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip